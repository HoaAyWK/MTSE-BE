components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        roles:
          type: array
        gender:
          type: string
        address:
          type: string
        country:
          type: string
        city:
          type: string
        status:
          type: string
        stars:
          type: number
        updatedAt:
          type: date-time
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: ["freelancer"]
        phone: "01923213"
        gender: Male
        status: Active
        indentityNumber: "02312313231"
        address: QQQ
        city: HCM
        country: VN

    Response:
      type: object
      properties:
        success:
          type: bool
        message:
          type: string

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        success:
          type: bool
        message:
          type: string

  responses:
    Regiter:
      description: Regiser successful
      content:
        application/json:
          schema: '#/components/schemas/Response'

    AccountNotExist:
      description: User not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: User not found

    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            success: false
            message: Not found

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT